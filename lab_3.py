# -*- coding: utf-8 -*-
"""Lab 3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lPxA3XqrZtYOGfbaatH2HwrfeKDkh88_
"""

from google.colab import drive
drive.mount('/content/drive')

import numpy as np
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Dense
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

file = pd.read_csv("/content/drive/MyDrive/AI lab/train.csv")
x = file.drop(columns=['label'])
y = file['label']
x

y

scaler = StandardScaler()
x = scaler.fit_transform(x)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.5, random_state=40)

network = Sequential()
network.add(Dense(128, input_dim=784, activation='relu'))
network.add(Dense(500, activation='relu'))
network.add(Dense(10, activation='softmax'))
network.compile(loss='sparse_categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
network.summary()

history = network.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=32)

test_loss, test_accuracy = network.evaluate(x_test, y_test)
print(f"Test Loss: {test_loss:.4f}")
print(f"Test Accuracy: {test_accuracy:.4f}")

y_pred = network.predict(x_test)
y_pred_labels = np.argmax(y_pred, axis=1)

num_images_to_visualize = 10
sample_indices = np.random.choice(range(len(x_test)), num_images_to_visualize, replace=False)

plt.figure(figsize=(12, 6))
for i, idx in enumerate(sample_indices):
    actual_label = y_test.iloc[idx]
    predicted_label = y_pred_labels[idx]
    image_pixels = x_test[idx].reshape(28, 28)
    plt.subplot(2, 5, i + 1)
    plt.imshow(image_pixels, cmap='gray')
    plt.title(f"Act: {actual_label}, Pred: {predicted_label}")
plt.show()