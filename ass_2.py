# -*- coding: utf-8 -*-
"""ASS_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zeocc2leFRHmvY9vQp_CJg8t5ZzVx-fc
"""

import numpy as np
import pandas as pd
import nltk

nltk.download('punkt')

data = pd.read_csv('/content/drive/MyDrive/AI LAB/BankFAQs.csv')
data.head(10)

import pickle
import operator
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split as tts
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.preprocessing import LabelEncoder as LE
from sklearn.metrics.pairwise import cosine_similarity
import random
import nltk
from nltk.stem.lancaster import LancasterStemmer

stemmer = LancasterStemmer()
def cleanup(sentence):
    word_tok = nltk.word_tokenize(sentence)
    stemmed_words = [stemmer.stem(w) for w in word_tok]

    return ' '.join(stemmed_words)

le = LE()

tfv = TfidfVectorizer(min_df=1, stop_words='english')

questions = data['Question'].values

X = []
for question in questions:
    X.append(cleanup(question))

tfv.fit(X)
le.fit(data['Class'])

X = tfv.transform(X)
y = le.transform(data['Class'])

trainx, testx, trainy, testy = tts(X, y, test_size=.25, random_state=42)

model = SVC(kernel='linear')
model.fit(trainx, trainy)
print("SVC:", model.score(testx, testy))

def get_max5(arr):
    ixarr = []
    for ix, el in enumerate(arr):
        ixarr.append((el, ix))
    ixarr.sort()

    ixs = []
    for i in ixarr[-5:]:
        ixs.append(i[1])

    return ixs[::-1]

def chat():
    print("Bot: Hi, Welcome to our bank")
    while True:
        usr = input("You: ")
        t_usr = tfv.transform([cleanup(usr.strip().lower())])
        questionset = data['Question']
        ans = []
        for question in questionset:
            sims = cosine_similarity(tfv.transform([question]), t_usr)
            ans.append(sims)
        ind = ans.index(max(ans))
        print("Bot:", data['Answer'][questionset.index[ind]])
chat()